version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:15
    container_name: cities_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-cities_db}
    volumes:
      - cities_postgres_data:/var/lib/postgresql/data
      - ./db/init/init_cities_db.sql:/docker-entrypoint-initdb.d/init_cities_db.sql
      - ./db/data:/docker-entrypoint-initdb.d/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-cities_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: postgres -c shared_buffers=2GB

  # Node.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cities_app
    environment:
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_NAME=${DB_NAME:-cities_db}
      - DB_PORT=5432
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  cities_postgres_data: 